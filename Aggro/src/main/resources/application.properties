# 데이터베이스 세팅
spring.datasource.url=jdbc:mysql://project-db-campus.smhrd.com:3307/mpus_h_231004?useSSL=false&characterEncoding=UTF-8&serverTimezone=UTC
spring.datasource.username=mpus_h_231004
spring.datasource.password=smhrd2
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# JAP 세팅
# create, create-drop, validate, update, none
# create : 테이블이 없을 경우에 테이블 생성
# create-drop : 테이블 생성 후 테스트 종료 시 drop
# validate : application 실행 시 @Entity 들과 이미 존재하는 테이블이 정상적으로 맵핑되었는지 판단하여
#            만약 @Entity와 테이블이 제대로 맵핑 되지 않으면 application이 실행되지 않는다
# update : 이미 테이블이 존재하는 상황에서 @Entity에 속성이 추가될 경우, 기존 테이블의 데이터에는 변화 없이 새로운 Column을 추가한다.
# none : 아무것도 하지 않는다 
spring.jpa.hibernate.ddl-auto=create-drop
# DDL 생성 시 데이터베이스 고유의 기능을 사용하는지에 대한 유무
spring.jpa.generate-ddl=true
# 콘솔에 SQL 출력 여부
spring.jpa.show-sql=true
# 사용하는 데이터베이스를 지정한다
spring.jpa.database=mysql
# 검색 해서 찾아보기
spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect
# 로깅에 표시되는 sql을 보기 좋게 표시해준다.
spring.jpa.properties.hibernate.format_sql=true

# hibernate logging
logging.level.org.hibernate=debug

# 서버 설정
server.port=8283
#context-path설정
server.servlet.context-path=/bigdata